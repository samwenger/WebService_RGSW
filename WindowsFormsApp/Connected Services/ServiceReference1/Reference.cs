//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsFormsApp.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Transaction", Namespace="http://schemas.datacontract.org/2004/07/DTO")]
    [System.SerializableAttribute()]
    public partial class Transaction : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idTransactionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int idUtilisateurField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private double montantField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime date {
            get {
                return this.dateField;
            }
            set {
                if ((this.dateField.Equals(value) != true)) {
                    this.dateField = value;
                    this.RaisePropertyChanged("date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idTransaction {
            get {
                return this.idTransactionField;
            }
            set {
                if ((this.idTransactionField.Equals(value) != true)) {
                    this.idTransactionField = value;
                    this.RaisePropertyChanged("idTransaction");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idType {
            get {
                return this.idTypeField;
            }
            set {
                if ((this.idTypeField.Equals(value) != true)) {
                    this.idTypeField = value;
                    this.RaisePropertyChanged("idType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int idUtilisateur {
            get {
                return this.idUtilisateurField;
            }
            set {
                if ((this.idUtilisateurField.Equals(value) != true)) {
                    this.idUtilisateurField = value;
                    this.RaisePropertyChanged("idUtilisateur");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public double montant {
            get {
                return this.montantField;
            }
            set {
                if ((this.montantField.Equals(value) != true)) {
                    this.montantField = value;
                    this.RaisePropertyChanged("montant");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransferAmountFromOnline", ReplyAction="http://tempuri.org/IService1/TransferAmountFromOnlineResponse")]
        double TransferAmountFromOnline(string username, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransferAmountFromOnline", ReplyAction="http://tempuri.org/IService1/TransferAmountFromOnlineResponse")]
        System.Threading.Tasks.Task<double> TransferAmountFromOnlineAsync(string username, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransferAmountFromFaculties", ReplyAction="http://tempuri.org/IService1/TransferAmountFromFacultiesResponse")]
        double TransferAmountFromFaculties(string username, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransferAmountFromFaculties", ReplyAction="http://tempuri.org/IService1/TransferAmountFromFacultiesResponse")]
        System.Threading.Tasks.Task<double> TransferAmountFromFacultiesAsync(string username, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransferAmountFromMachine", ReplyAction="http://tempuri.org/IService1/TransferAmountFromMachineResponse")]
        double TransferAmountFromMachine(int uid, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/TransferAmountFromMachine", ReplyAction="http://tempuri.org/IService1/TransferAmountFromMachineResponse")]
        System.Threading.Tasks.Task<double> TransferAmountFromMachineAsync(int uid, double amount);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNbOfCopies", ReplyAction="http://tempuri.org/IService1/GetNbOfCopiesResponse")]
        int GetNbOfCopies(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetNbOfCopies", ReplyAction="http://tempuri.org/IService1/GetNbOfCopiesResponse")]
        System.Threading.Tasks.Task<int> GetNbOfCopiesAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTransactions", ReplyAction="http://tempuri.org/IService1/GetTransactionsResponse")]
        WindowsFormsApp.ServiceReference1.Transaction[] GetTransactions(int idUtilisateur);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetTransactions", ReplyAction="http://tempuri.org/IService1/GetTransactionsResponse")]
        System.Threading.Tasks.Task<WindowsFormsApp.ServiceReference1.Transaction[]> GetTransactionsAsync(int idUtilisateur);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WindowsFormsApp.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WindowsFormsApp.ServiceReference1.IService1>, WindowsFormsApp.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public double TransferAmountFromOnline(string username, double amount) {
            return base.Channel.TransferAmountFromOnline(username, amount);
        }
        
        public System.Threading.Tasks.Task<double> TransferAmountFromOnlineAsync(string username, double amount) {
            return base.Channel.TransferAmountFromOnlineAsync(username, amount);
        }
        
        public double TransferAmountFromFaculties(string username, double amount) {
            return base.Channel.TransferAmountFromFaculties(username, amount);
        }
        
        public System.Threading.Tasks.Task<double> TransferAmountFromFacultiesAsync(string username, double amount) {
            return base.Channel.TransferAmountFromFacultiesAsync(username, amount);
        }
        
        public double TransferAmountFromMachine(int uid, double amount) {
            return base.Channel.TransferAmountFromMachine(uid, amount);
        }
        
        public System.Threading.Tasks.Task<double> TransferAmountFromMachineAsync(int uid, double amount) {
            return base.Channel.TransferAmountFromMachineAsync(uid, amount);
        }
        
        public int GetNbOfCopies(string username) {
            return base.Channel.GetNbOfCopies(username);
        }
        
        public System.Threading.Tasks.Task<int> GetNbOfCopiesAsync(string username) {
            return base.Channel.GetNbOfCopiesAsync(username);
        }
        
        public WindowsFormsApp.ServiceReference1.Transaction[] GetTransactions(int idUtilisateur) {
            return base.Channel.GetTransactions(idUtilisateur);
        }
        
        public System.Threading.Tasks.Task<WindowsFormsApp.ServiceReference1.Transaction[]> GetTransactionsAsync(int idUtilisateur) {
            return base.Channel.GetTransactionsAsync(idUtilisateur);
        }
    }
}
